// <auto-generated />
using System;
using FarmProject.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmProject.Infrastructure.Migrations.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    partial class FarmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmProject.Domain.Models.FarmEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FarmEventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FarmEvents");
                });

            modelBuilder.Entity("FarmProject.Domain.Models.Pair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FemaleRabbitId")
                        .HasColumnType("int");

                    b.Property<int?>("MaleRabbitId")
                        .HasColumnType("int");

                    b.Property<string>("PairingStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FemaleRabbitId");

                    b.HasIndex("MaleRabbitId");

                    b.ToTable("Pairs");
                });

            modelBuilder.Entity("FarmProject.Domain.Models.Rabbit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedingStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Available");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.HasKey("Id");

                    b.ToTable("Rabbits");
                });

            modelBuilder.Entity("FarmProject.Domain.Models.Pair", b =>
                {
                    b.HasOne("FarmProject.Domain.Models.Rabbit", "FemaleRabbit")
                        .WithMany()
                        .HasForeignKey("FemaleRabbitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FarmProject.Domain.Models.Rabbit", "MaleRabbit")
                        .WithMany()
                        .HasForeignKey("MaleRabbitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FemaleRabbit");

                    b.Navigation("MaleRabbit");
                });
#pragma warning restore 612, 618
        }
    }
}
